//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyCurrentLevelRemovedListenerComponent anyCurrentLevelRemovedListener { get { return (AnyCurrentLevelRemovedListenerComponent)GetComponent(GameComponentsLookup.AnyCurrentLevelRemovedListener); } }
    public bool hasAnyCurrentLevelRemovedListener { get { return HasComponent(GameComponentsLookup.AnyCurrentLevelRemovedListener); } }

    public void AddAnyCurrentLevelRemovedListener(System.Collections.Generic.List<IAnyCurrentLevelRemovedListener> newValue) {
        var index = GameComponentsLookup.AnyCurrentLevelRemovedListener;
        var component = (AnyCurrentLevelRemovedListenerComponent)CreateComponent(index, typeof(AnyCurrentLevelRemovedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyCurrentLevelRemovedListener(System.Collections.Generic.List<IAnyCurrentLevelRemovedListener> newValue) {
        var index = GameComponentsLookup.AnyCurrentLevelRemovedListener;
        var component = (AnyCurrentLevelRemovedListenerComponent)CreateComponent(index, typeof(AnyCurrentLevelRemovedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyCurrentLevelRemovedListener() {
        RemoveComponent(GameComponentsLookup.AnyCurrentLevelRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyCurrentLevelRemovedListener;

    public static Entitas.IMatcher<GameEntity> AnyCurrentLevelRemovedListener {
        get {
            if (_matcherAnyCurrentLevelRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyCurrentLevelRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyCurrentLevelRemovedListener = matcher;
            }

            return _matcherAnyCurrentLevelRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyCurrentLevelRemovedListener(IAnyCurrentLevelRemovedListener value) {
        var listeners = hasAnyCurrentLevelRemovedListener
            ? anyCurrentLevelRemovedListener.value
            : new System.Collections.Generic.List<IAnyCurrentLevelRemovedListener>();
        listeners.Add(value);
        ReplaceAnyCurrentLevelRemovedListener(listeners);
    }

    public void RemoveAnyCurrentLevelRemovedListener(IAnyCurrentLevelRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyCurrentLevelRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyCurrentLevelRemovedListener();
        } else {
            ReplaceAnyCurrentLevelRemovedListener(listeners);
        }
    }
}
