//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity availableObjectsEntity { get { return GetGroup(GameMatcher.AvailableObjects).GetSingleEntity(); } }
    public AvailableObjectsComponent availableObjects { get { return availableObjectsEntity.availableObjects; } }
    public bool hasAvailableObjects { get { return availableObjectsEntity != null; } }

    public GameEntity SetAvailableObjects(int newValue) {
        if (hasAvailableObjects) {
            throw new Entitas.EntitasException("Could not set AvailableObjects!\n" + this + " already has an entity with AvailableObjectsComponent!",
                "You should check if the context already has a availableObjectsEntity before setting it or use context.ReplaceAvailableObjects().");
        }
        var entity = CreateEntity();
        entity.AddAvailableObjects(newValue);
        return entity;
    }

    public void ReplaceAvailableObjects(int newValue) {
        var entity = availableObjectsEntity;
        if (entity == null) {
            entity = SetAvailableObjects(newValue);
        } else {
            entity.ReplaceAvailableObjects(newValue);
        }
    }

    public void RemoveAvailableObjects() {
        availableObjectsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AvailableObjectsComponent availableObjects { get { return (AvailableObjectsComponent)GetComponent(GameComponentsLookup.AvailableObjects); } }
    public bool hasAvailableObjects { get { return HasComponent(GameComponentsLookup.AvailableObjects); } }

    public void AddAvailableObjects(int newValue) {
        var index = GameComponentsLookup.AvailableObjects;
        var component = (AvailableObjectsComponent)CreateComponent(index, typeof(AvailableObjectsComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAvailableObjects(int newValue) {
        var index = GameComponentsLookup.AvailableObjects;
        var component = (AvailableObjectsComponent)CreateComponent(index, typeof(AvailableObjectsComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAvailableObjects() {
        RemoveComponent(GameComponentsLookup.AvailableObjects);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAvailableObjects;

    public static Entitas.IMatcher<GameEntity> AvailableObjects {
        get {
            if (_matcherAvailableObjects == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AvailableObjects);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAvailableObjects = matcher;
            }

            return _matcherAvailableObjects;
        }
    }
}
