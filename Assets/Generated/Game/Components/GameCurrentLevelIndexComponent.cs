//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity currentLevelIndexEntity { get { return GetGroup(GameMatcher.CurrentLevelIndex).GetSingleEntity(); } }
    public CurrentLevelIndexComponent currentLevelIndex { get { return currentLevelIndexEntity.currentLevelIndex; } }
    public bool hasCurrentLevelIndex { get { return currentLevelIndexEntity != null; } }

    public GameEntity SetCurrentLevelIndex(int newValue) {
        if (hasCurrentLevelIndex) {
            throw new Entitas.EntitasException("Could not set CurrentLevelIndex!\n" + this + " already has an entity with CurrentLevelIndexComponent!",
                "You should check if the context already has a currentLevelIndexEntity before setting it or use context.ReplaceCurrentLevelIndex().");
        }
        var entity = CreateEntity();
        entity.AddCurrentLevelIndex(newValue);
        return entity;
    }

    public void ReplaceCurrentLevelIndex(int newValue) {
        var entity = currentLevelIndexEntity;
        if (entity == null) {
            entity = SetCurrentLevelIndex(newValue);
        } else {
            entity.ReplaceCurrentLevelIndex(newValue);
        }
    }

    public void RemoveCurrentLevelIndex() {
        currentLevelIndexEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentLevelIndexComponent currentLevelIndex { get { return (CurrentLevelIndexComponent)GetComponent(GameComponentsLookup.CurrentLevelIndex); } }
    public bool hasCurrentLevelIndex { get { return HasComponent(GameComponentsLookup.CurrentLevelIndex); } }

    public void AddCurrentLevelIndex(int newValue) {
        var index = GameComponentsLookup.CurrentLevelIndex;
        var component = (CurrentLevelIndexComponent)CreateComponent(index, typeof(CurrentLevelIndexComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentLevelIndex(int newValue) {
        var index = GameComponentsLookup.CurrentLevelIndex;
        var component = (CurrentLevelIndexComponent)CreateComponent(index, typeof(CurrentLevelIndexComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentLevelIndex() {
        RemoveComponent(GameComponentsLookup.CurrentLevelIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentLevelIndex;

    public static Entitas.IMatcher<GameEntity> CurrentLevelIndex {
        get {
            if (_matcherCurrentLevelIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentLevelIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentLevelIndex = matcher;
            }

            return _matcherCurrentLevelIndex;
        }
    }
}
