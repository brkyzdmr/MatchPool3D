//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity levelNameEntity { get { return GetGroup(GameMatcher.LevelName).GetSingleEntity(); } }
    public LevelNameComponent levelName { get { return levelNameEntity.levelName; } }
    public bool hasLevelName { get { return levelNameEntity != null; } }

    public GameEntity SetLevelName(string newValue) {
        if (hasLevelName) {
            throw new Entitas.EntitasException("Could not set LevelName!\n" + this + " already has an entity with LevelNameComponent!",
                "You should check if the context already has a levelNameEntity before setting it or use context.ReplaceLevelName().");
        }
        var entity = CreateEntity();
        entity.AddLevelName(newValue);
        return entity;
    }

    public void ReplaceLevelName(string newValue) {
        var entity = levelNameEntity;
        if (entity == null) {
            entity = SetLevelName(newValue);
        } else {
            entity.ReplaceLevelName(newValue);
        }
    }

    public void RemoveLevelName() {
        levelNameEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LevelNameComponent levelName { get { return (LevelNameComponent)GetComponent(GameComponentsLookup.LevelName); } }
    public bool hasLevelName { get { return HasComponent(GameComponentsLookup.LevelName); } }

    public void AddLevelName(string newValue) {
        var index = GameComponentsLookup.LevelName;
        var component = (LevelNameComponent)CreateComponent(index, typeof(LevelNameComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLevelName(string newValue) {
        var index = GameComponentsLookup.LevelName;
        var component = (LevelNameComponent)CreateComponent(index, typeof(LevelNameComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelName() {
        RemoveComponent(GameComponentsLookup.LevelName);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLevelName;

    public static Entitas.IMatcher<GameEntity> LevelName {
        get {
            if (_matcherLevelName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LevelName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLevelName = matcher;
            }

            return _matcherLevelName;
        }
    }
}
