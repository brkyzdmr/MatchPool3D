//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity maxProducedObjectCountEntity { get { return GetGroup(GameMatcher.MaxProducedObjectCount).GetSingleEntity(); } }
    public MaxProducedObjectCountComponent maxProducedObjectCount { get { return maxProducedObjectCountEntity.maxProducedObjectCount; } }
    public bool hasMaxProducedObjectCount { get { return maxProducedObjectCountEntity != null; } }

    public GameEntity SetMaxProducedObjectCount(int newValue) {
        if (hasMaxProducedObjectCount) {
            throw new Entitas.EntitasException("Could not set MaxProducedObjectCount!\n" + this + " already has an entity with MaxProducedObjectCountComponent!",
                "You should check if the context already has a maxProducedObjectCountEntity before setting it or use context.ReplaceMaxProducedObjectCount().");
        }
        var entity = CreateEntity();
        entity.AddMaxProducedObjectCount(newValue);
        return entity;
    }

    public void ReplaceMaxProducedObjectCount(int newValue) {
        var entity = maxProducedObjectCountEntity;
        if (entity == null) {
            entity = SetMaxProducedObjectCount(newValue);
        } else {
            entity.ReplaceMaxProducedObjectCount(newValue);
        }
    }

    public void RemoveMaxProducedObjectCount() {
        maxProducedObjectCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MaxProducedObjectCountComponent maxProducedObjectCount { get { return (MaxProducedObjectCountComponent)GetComponent(GameComponentsLookup.MaxProducedObjectCount); } }
    public bool hasMaxProducedObjectCount { get { return HasComponent(GameComponentsLookup.MaxProducedObjectCount); } }

    public void AddMaxProducedObjectCount(int newValue) {
        var index = GameComponentsLookup.MaxProducedObjectCount;
        var component = (MaxProducedObjectCountComponent)CreateComponent(index, typeof(MaxProducedObjectCountComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxProducedObjectCount(int newValue) {
        var index = GameComponentsLookup.MaxProducedObjectCount;
        var component = (MaxProducedObjectCountComponent)CreateComponent(index, typeof(MaxProducedObjectCountComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxProducedObjectCount() {
        RemoveComponent(GameComponentsLookup.MaxProducedObjectCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMaxProducedObjectCount;

    public static Entitas.IMatcher<GameEntity> MaxProducedObjectCount {
        get {
            if (_matcherMaxProducedObjectCount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxProducedObjectCount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMaxProducedObjectCount = matcher;
            }

            return _matcherMaxProducedObjectCount;
        }
    }
}
