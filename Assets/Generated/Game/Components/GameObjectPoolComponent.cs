//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ObjectPoolComponent objectPool { get { return (ObjectPoolComponent)GetComponent(GameComponentsLookup.ObjectPool); } }
    public bool hasObjectPool { get { return HasComponent(GameComponentsLookup.ObjectPool); } }

    public void AddObjectPool(string newId, DesperateDevs.Utils.ObjectPool<IView> newValue) {
        var index = GameComponentsLookup.ObjectPool;
        var component = (ObjectPoolComponent)CreateComponent(index, typeof(ObjectPoolComponent));
        component.Id = newId;
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceObjectPool(string newId, DesperateDevs.Utils.ObjectPool<IView> newValue) {
        var index = GameComponentsLookup.ObjectPool;
        var component = (ObjectPoolComponent)CreateComponent(index, typeof(ObjectPoolComponent));
        component.Id = newId;
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveObjectPool() {
        RemoveComponent(GameComponentsLookup.ObjectPool);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherObjectPool;

    public static Entitas.IMatcher<GameEntity> ObjectPool {
        get {
            if (_matcherObjectPool == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ObjectPool);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherObjectPool = matcher;
            }

            return _matcherObjectPool;
        }
    }
}
