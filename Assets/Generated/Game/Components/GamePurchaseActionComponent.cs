//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity purchaseActionEntity { get { return GetGroup(GameMatcher.PurchaseAction).GetSingleEntity(); } }
    public PurchaseActionComponent purchaseAction { get { return purchaseActionEntity.purchaseAction; } }
    public bool hasPurchaseAction { get { return purchaseActionEntity != null; } }

    public GameEntity SetPurchaseAction(string newItemType, int newPrice) {
        if (hasPurchaseAction) {
            throw new Entitas.EntitasException("Could not set PurchaseAction!\n" + this + " already has an entity with PurchaseActionComponent!",
                "You should check if the context already has a purchaseActionEntity before setting it or use context.ReplacePurchaseAction().");
        }
        var entity = CreateEntity();
        entity.AddPurchaseAction(newItemType, newPrice);
        return entity;
    }

    public void ReplacePurchaseAction(string newItemType, int newPrice) {
        var entity = purchaseActionEntity;
        if (entity == null) {
            entity = SetPurchaseAction(newItemType, newPrice);
        } else {
            entity.ReplacePurchaseAction(newItemType, newPrice);
        }
    }

    public void RemovePurchaseAction() {
        purchaseActionEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PurchaseActionComponent purchaseAction { get { return (PurchaseActionComponent)GetComponent(GameComponentsLookup.PurchaseAction); } }
    public bool hasPurchaseAction { get { return HasComponent(GameComponentsLookup.PurchaseAction); } }

    public void AddPurchaseAction(string newItemType, int newPrice) {
        var index = GameComponentsLookup.PurchaseAction;
        var component = (PurchaseActionComponent)CreateComponent(index, typeof(PurchaseActionComponent));
        component.ItemType = newItemType;
        component.Price = newPrice;
        AddComponent(index, component);
    }

    public void ReplacePurchaseAction(string newItemType, int newPrice) {
        var index = GameComponentsLookup.PurchaseAction;
        var component = (PurchaseActionComponent)CreateComponent(index, typeof(PurchaseActionComponent));
        component.ItemType = newItemType;
        component.Price = newPrice;
        ReplaceComponent(index, component);
    }

    public void RemovePurchaseAction() {
        RemoveComponent(GameComponentsLookup.PurchaseAction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPurchaseAction;

    public static Entitas.IMatcher<GameEntity> PurchaseAction {
        get {
            if (_matcherPurchaseAction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PurchaseAction);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPurchaseAction = matcher;
            }

            return _matcherPurchaseAction;
        }
    }
}
