//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SphereColliderComponent sphereCollider { get { return (SphereColliderComponent)GetComponent(GameComponentsLookup.SphereCollider); } }
    public bool hasSphereCollider { get { return HasComponent(GameComponentsLookup.SphereCollider); } }

    public void AddSphereCollider(UnityEngine.Vector3 newCenter, float newRadius) {
        var index = GameComponentsLookup.SphereCollider;
        var component = (SphereColliderComponent)CreateComponent(index, typeof(SphereColliderComponent));
        component.Center = newCenter;
        component.Radius = newRadius;
        AddComponent(index, component);
    }

    public void ReplaceSphereCollider(UnityEngine.Vector3 newCenter, float newRadius) {
        var index = GameComponentsLookup.SphereCollider;
        var component = (SphereColliderComponent)CreateComponent(index, typeof(SphereColliderComponent));
        component.Center = newCenter;
        component.Radius = newRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveSphereCollider() {
        RemoveComponent(GameComponentsLookup.SphereCollider);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSphereCollider;

    public static Entitas.IMatcher<GameEntity> SphereCollider {
        get {
            if (_matcherSphereCollider == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SphereCollider);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSphereCollider = matcher;
            }

            return _matcherSphereCollider;
        }
    }
}
